import React, { useState } from 'react';
import { MdOutlineVideoCall, MdPhotoLibrary } from 'react-icons/md';
import { BsThreeDots } from 'react-icons/bs';
import { AiOutlineLike } from 'react-icons/ai';
import { FaRegComment, FaPaperPlane } from 'react-icons/fa';
import { PiShareFatThin } from 'react-icons/pi';
import { FaSmile, FaImage, FaMapMarkerAlt, FaVideo, FaTimes, FaFacebookMessenger, FaWhatsapp, FaLink, FaUsers, FaFlag } from 'react-icons/fa';
import { useDropzone } from 'react-dropzone';
import styles from 'Frontend/src/pages/Home/Home.module.scss';

function MainContent() {
  const [comments, setComments] = useState([]);
  const [currentComment, setCurrentComment] = useState('');
  const [isPopupOpen, setIsPopupOpen] = useState(false);
  const [isSharePopupOpen, setIsSharePopupOpen] = useState(false); // State cho pop-up chia s·∫ª
  const [postContent, setPostContent] = useState('');
  const [files, setFiles] = useState([]);
  const [description, setDescription] = useState(''); // N·ªôi dung m√¥ t·∫£
  const [visibility, setVisibility] = useState('C√¥ng khai'); // T√≠nh nƒÉng hi·ªÉn th·ªã
  const [isEmojiMenuVisible, setIsEmojiMenuVisible] = useState(false);

  const [hoveringLike, setHoveringLike] = useState(false);



  const [currentLike, setCurrentLike] = useState({ emoji: null, label: 'Like' }); // L∆∞u tr·ªØ bi·ªÉu t∆∞·ª£ng c·∫£m x√∫c v√† t√™n


  const handleLikeChange = (emoji, label) => {
    setCurrentLike({ emoji, label }); // C·∫≠p nh·∫≠t bi·ªÉu t∆∞·ª£ng c·∫£m x√∫c v√† t√™n
    setIsEmojiMenuVisible(false); // ·∫®n menu emoji
  };

  const handleMouseEnter = () => {
    setHoveringLike(true);
    setIsEmojiMenuVisible(true); // Hi·ªán menu emoji khi hover
  };

  const handleMouseLeave = () => {
    if (!isEmojiMenuVisible) {
      setHoveringLike(false);
    }
  };

  const handleEmojiMenuMouseEnter = () => {
    setIsEmojiMenuVisible(true); // Gi·ªØ menu m·ªü khi di chu·ªôt v√†o
  };

  const handleEmojiMenuMouseLeave = () => {
    setIsEmojiMenuVisible(false); // ·∫®n menu khi kh√¥ng c√≤n di chu·ªôt v√†o
  };



  // X·ª≠ l√Ω th√™m b√¨nh lu·∫≠n
  const handleAddComment = () => {
    if (currentComment.trim() !== '') {
      setComments([...comments, currentComment]);
      setCurrentComment('');
    }
  };

  const { getRootProps, getInputProps } = useDropzone({
    accept: 'image/*,video/*',
    onDrop: acceptedFiles => {
      setFiles(acceptedFiles.map(file => Object.assign(file, {
        preview: URL.createObjectURL(file)
      })));
    }
  });

  // H√†m ƒë·ªÉ m·ªü/ƒë√≥ng pop-up t·∫°o b√†i vi·∫øt
  const togglePopup = () => {
    setIsPopupOpen(!isPopupOpen);
  };

  // H√†m ƒë·ªÉ m·ªü/ƒë√≥ng pop-up chia s·∫ª
  const toggleSharePopup = () => {
    setIsSharePopupOpen(!isSharePopupOpen);
  };

  const handleShare = () => {
    alert('Post shared!');
    toggleSharePopup(); // ƒê√≥ng pop-up chia s·∫ª sau khi chia s·∫ª
  };

  return (
    <main className={styles.content}>
      <div className={styles.postContainer}>
        <input
          type="text"
          placeholder="Ti·∫øn ∆°i, b·∫°n ƒëang nghƒ© g√¨ th·∫ø?"
          className={styles.inputField}
          onFocus={togglePopup}
        />
        <div className={styles.actionButtons}>
          <button className={styles.photoButton} onClick={togglePopup}>
            <MdPhotoLibrary className={styles.iconGreen} />
            ·∫¢nh/video
          </button>
        </div>
      </div>

      {/* Pop-up ƒë·ªÉ t·∫°o b√†i vi·∫øt */}
      {isPopupOpen && (
        <>
          <div className={styles.popupOverlay} onClick={togglePopup}></div>
          <div className={styles.popup}>
            <div className={styles.popupHeader}>
              <h2 className={styles.popupTitle}>T·∫°o b√†i vi·∫øt</h2>
              <button className={styles.closeButton} onClick={togglePopup}>X</button>
            </div>
            <div className={styles.userInfo}>
              {/* <img src="profile.jpg" alt="Profile" className={styles.profileImage} /> */}
              <div className={styles.userName}>
                <p className={styles.userNameText}>Nguy·ªÖn Ti·∫øn</p>
                <button className={styles.publicButton}>C√¥ng khai</button>
              </div>
            </div>
            <textarea
              className={styles.textarea}
              placeholder="Ti·∫øn ∆°i, b·∫°n ƒëang nghƒ© g√¨ th·∫ø?"
              value={postContent}
              onChange={(e) => setPostContent(e.target.value)}
            />
            <div {...getRootProps({ className: styles.dropzone })}>
              <input {...getInputProps()} />
              <p>Th√™m ·∫£nh/video ho·∫∑c k√©o v√† th·∫£</p>
            </div>
            <div className={styles.popupActions}>
              <button className={styles.mobileButton}>
                <FaVideo className={styles.iconBlue} /> Th√™m ·∫£nh v√† video t·ª´ thi·∫øt b·ªã di ƒë·ªông.
              </button>
              <button className={styles.addButton}>Th√™m</button>
            </div>
            <div className={styles.extraOptions}>
              <p>Th√™m v√†o b√†i vi·∫øt c·ªßa b·∫°n</p>
              <div className={styles.iconOptions}>
                <FaImage className={styles.iconGreen} />
                <FaSmile className={styles.iconYellow} />
                <FaMapMarkerAlt className={styles.iconRed} />
                <span className={styles.iconPurple}>GIF</span>
              </div>
            </div>
            <button className={styles.continueButton}>Ti·∫øp</button>
          </div>
        </>
      )}

      {/* Pop-up chia s·∫ª */}
      {isSharePopupOpen && (
        <>
          <div className={styles.popupOverlay} onClick={toggleSharePopup}></div>
          <div className={styles.sharePopup}>
            <div className={styles.popupHeader}>
              <h2 className={styles.popupTitle}>Chia s·∫ª</h2>
              <button className={styles.closeButton} onClick={toggleSharePopup}><FaTimes /></button>
            </div>
            <div className={styles.p4}>
              <div className={styles.userInfo1}>
                {/* <img src="profile.jpg" alt="Profile" className={styles.profileImage} /> */}
                <div className={styles.userName}>
                  <p className={styles.userNameText}>Nguy·ªÖn Ti·∫øn</p>
                  <div className={styles.visibilityButtons}>
                    <button className={styles.visibilityButton} onClick={() => setVisibility(visibility === 'C√¥ng khai' ? 'Ri√™ng t∆∞' : 'C√¥ng khai')}>{visibility}</button>
                  </div>
                </div>
              </div>
              <textarea
                className={styles.textarea}
                placeholder="H√£y n√≥i g√¨ ƒë√≥ v·ªÅ n·ªôi dung n√†y..."
                value={description}
                onChange={(e) => setDescription(e.target.value)}
              />
              <div className={styles.popupActions}>
                <button className={styles.shareButton} onClick={handleShare}>Chia s·∫ª ngay</button>
              </div>
              <div className={styles.extraOptions}>
                <h3 className={styles.extraOptionsTitle}>Chia s·∫ª l√™n</h3>
                <div className={styles.shareIcons}>
                  <button className={styles.iconButton}><FaFacebookMessenger /></button>
                  <button className={styles.iconButton}><FaWhatsapp /></button>
                  <button className={styles.iconButton}><FaLink /></button>
                  <button className={styles.iconButton}><FaUsers /></button>
                  <button className={styles.iconButton}><FaFlag /></button>
                </div>
              </div>
            </div>
          </div>
        </>
      )}

      {/* B√†i vi·∫øt */}
      <div className={styles.postContainer}>
        <div className={styles.postHeader}>
          <div className={styles.userPostInfo}>
            <img src="img/·∫¢nh ch·ª•p m√†n h√¨nh 2024-06-10 024210.png" alt="Anime" className={styles.postImage} />
            <div>
              <span className={styles.postUserName}>Anime Season</span> ¬∑ <span className={styles.followButton}>Theo d√µi</span>
              <p className={styles.postTime}>22 gi·ªù ¬∑ üåç</p>
            </div>
          </div>
          <BsThreeDots onClick={toggleSharePopup} /> {/* N√∫t chia s·∫ª */}
        </div>
        <p className={styles.postText}>Re: Zero ƒë√£ tr·ªü l·∫°i! üíÄ</p>
        <img src="img/·∫¢nh ch·ª•p m√†n h√¨nh 2024-06-10 024210.png" alt="Anime Post" className={styles.postImageFull} />

        {/* B√¨nh lu·∫≠n v√† t∆∞∆°ng t√°c */}
        <div className={styles.interactionBar}>
          <div className={styles.likeButton}
            onMouseEnter={handleMouseEnter}
            onMouseLeave={handleMouseLeave}>
            <button className={styles.interactionButton}>
              {currentLike.emoji ? currentLike.emoji : <AiOutlineLike />} {/* Hi·ªÉn th·ªã emoji n·∫øu c√≥ */}
              <span>{currentLike.label}</span> {/* Hi·ªÉn th·ªã t√™n c·∫£m x√∫c */}
            </button>

            {hoveringLike && isEmojiMenuVisible && (
              <div
                className={styles.emojiOptions}
                onMouseEnter={handleEmojiMenuMouseEnter}
                onMouseLeave={handleEmojiMenuMouseLeave}
              >
                <button className={styles.emojiButton} onClick={() => handleLikeChange('‚ù§Ô∏è', 'Love')}><span role="img" aria-label="love">‚ù§Ô∏è</span></button>
                <button className={styles.emojiButton} onClick={() => handleLikeChange('üòÇ', 'Haha')}><span role="img" aria-label="haha">üòÇ</span></button>
                <button className={styles.emojiButton} onClick={() => handleLikeChange('üòÆ', 'Wow')}><span role="img" aria-label="wow">üòÆ</span></button>
                <button className={styles.emojiButton} onClick={() => handleLikeChange('üò¢', 'Sad')}><span role="img" aria-label="sad">üò¢</span></button>
                <button className={styles.emojiButton} onClick={() => handleLikeChange('üò°', 'Angry')}><span role="img" aria-label="angry">üò°</span></button>
                <button className={styles.emojiButton} onClick={() => handleLikeChange('üëç', 'Like')}><span role="img" aria-label="thumbs up">üëç</span></button>
              </div>
            )}
          </div>

          <button className={styles.interactionButton}>
            <FaRegComment />
            <span>Comment</span>
          </button>
          <button className={styles.interactionButton} onClick={toggleSharePopup}>
            <PiShareFatThin />
            <span>Share</span>
          </button>
        </div>

        {/* B√¨nh lu·∫≠n */}
        <div className={styles.commentInputContainer}>
          <input
            type="text"
            value={currentComment}
            onChange={(e) => setCurrentComment(e.target.value)}
            placeholder="Vi·∫øt b√¨nh lu·∫≠n..."
            className={styles.commentInput}
          />
          <button onClick={handleAddComment} className={styles.sendButton}>
            <FaPaperPlane size={24} />
          </button>
        </div>

        {/* Hi·ªÉn th·ªã danh s√°ch b√¨nh lu·∫≠n */}
        <div className={styles.commentSection}>
          {comments.map((comment, index) => (
            <div key={index} className={styles.comment}>
              <strong>Ng∆∞·ªùi d√πng:</strong> {comment}
            </div>
          ))}
        </div>

      </div>
    </main>
  );
}

export default MainContent;
